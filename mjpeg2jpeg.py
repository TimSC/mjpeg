#!/usr/bin/python

#
#       mjpeg2jpeg.py -- Parse a JPEG file and insert Huffman tables
#
#       Copyright (C) 2006
#	    Laurent Pinchart (laurent.pinchart@skynet.be)
#	    Luc Saillard (luc@saillard.org)
#
#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 2 of the License, or
#       (at your option) any later version.
#

import struct, array

huffman_table = \
	'\xFF\xC4\x01\xA2\x00\x00\x01\x05\x01\x01\x01\x01'\
        '\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02'\
        '\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x01\x00\x03'\
        '\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00'\
        '\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09'\
        '\x0A\x0B\x10\x00\x02\x01\x03\x03\x02\x04\x03\x05'\
        '\x05\x04\x04\x00\x00\x01\x7D\x01\x02\x03\x00\x04'\
        '\x11\x05\x12\x21\x31\x41\x06\x13\x51\x61\x07\x22'\
        '\x71\x14\x32\x81\x91\xA1\x08\x23\x42\xB1\xC1\x15'\
        '\x52\xD1\xF0\x24\x33\x62\x72\x82\x09\x0A\x16\x17'\
        '\x18\x19\x1A\x25\x26\x27\x28\x29\x2A\x34\x35\x36'\
        '\x37\x38\x39\x3A\x43\x44\x45\x46\x47\x48\x49\x4A'\
        '\x53\x54\x55\x56\x57\x58\x59\x5A\x63\x64\x65\x66'\
        '\x67\x68\x69\x6A\x73\x74\x75\x76\x77\x78\x79\x7A'\
        '\x83\x84\x85\x86\x87\x88\x89\x8A\x92\x93\x94\x95'\
        '\x96\x97\x98\x99\x9A\xA2\xA3\xA4\xA5\xA6\xA7\xA8'\
        '\xA9\xAA\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA\xC2'\
        '\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xD2\xD3\xD4\xD5'\
        '\xD6\xD7\xD8\xD9\xDA\xE1\xE2\xE3\xE4\xE5\xE6\xE7'\
        '\xE8\xE9\xEA\xF1\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9'\
        '\xFA\x11\x00\x02\x01\x02\x04\x04\x03\x04\x07\x05'\
        '\x04\x04\x00\x01\x02\x77\x00\x01\x02\x03\x11\x04'\
        '\x05\x21\x31\x06\x12\x41\x51\x07\x61\x71\x13\x22'\
        '\x32\x81\x08\x14\x42\x91\xA1\xB1\xC1\x09\x23\x33'\
        '\x52\xF0\x15\x62\x72\xD1\x0A\x16\x24\x34\xE1\x25'\
        '\xF1\x17\x18\x19\x1A\x26\x27\x28\x29\x2A\x35\x36'\
        '\x37\x38\x39\x3A\x43\x44\x45\x46\x47\x48\x49\x4A'\
        '\x53\x54\x55\x56\x57\x58\x59\x5A\x63\x64\x65\x66'\
        '\x67\x68\x69\x6A\x73\x74\x75\x76\x77\x78\x79\x7A'\
        '\x82\x83\x84\x85\x86\x87\x88\x89\x8A\x92\x93\x94'\
        '\x95\x96\x97\x98\x99\x9A\xA2\xA3\xA4\xA5\xA6\xA7'\
        '\xA8\xA9\xAA\xB2\xB3\xB4\xB5\xB6\xB7\xB8\xB9\xBA'\
        '\xC2\xC3\xC4\xC5\xC6\xC7\xC8\xC9\xCA\xD2\xD3\xD4'\
        '\xD5\xD6\xD7\xD8\xD9\xDA\xE2\xE3\xE4\xE5\xE6\xE7'\
        '\xE8\xE9\xEA\xF2\xF3\xF4\xF5\xF6\xF7\xF8\xF9\xFA'
 
def fixup_jpeg(instream, outstream):
    """Copy JPEG data from instream to outstream and insert Huffman tables
       if needed."""

    hdr = instream.read(2)
    if hdr != '\xff\xd8':
        return False

    outstream.write(hdr)

    has_dht = False
    while not has_dht:
        hdr = instream.read(4)
	if hdr[0] != '\xff':
	    return False

	if hdr[1] == '\xc4':
	    has_dht = True
	elif hdr[1] == '\xda':
	    break

	# Skip to the next marker.
	size = (ord(hdr[2]) << 8) + ord(hdr[3])
	outstream.write(hdr)
        outstream.write(instream.read(size-2))

    if not has_dht:
        outstream.write(huffman_table)
        outstream.write(hdr)

    # Process the remaining data in one go
    outstream.write(instream.read())
    return True


if __name__ == "__main__":

    import sys
    from cStringIO import StringIO
    
    if len(sys.argv) < 2:
        print 'Usage: %s files...\n' % sys.argv[0]
	sys.exit(1)

    for filename in sys.argv[1:]:
        instream = file(filename, 'rb')
	outstream = StringIO()
	if fixup_jpeg(instream, outstream):
	    file(filename, 'wb').write(outstream.getvalue())
	else:
	    print '%s is not a valid JPEG file' % filename

